The items under each date are the changes from the previous verison.

[Nov 29, 2009]
- Boundary condition "Periodic" is renamed to "Bloch".
- "Bloch" boundary condition supports oblique incidence of a plane wave.
- "CrossSectional" class is added to src/shape.py.  This creates various 2D planar shapes and cylindrical shapes.
- Example input files in in/examples are rewritten more cleanly.  Examples for the usage of a distributed source, cylindrical object, obliquely incident plane wave source are added.
- matlab/ directory, which has MATLAB scripts to read and draw the outputs of FD3D, is added.


[Jan 18, 2010]
- SciPy dependence is removed; now *.mat file (for PlaneDistributedSrc) can be read without importing scipy.io.  See in/examples/distsrc.py. 
- param/ directory, which contains material parameters such as eps of Ag and SiO2 as a function of frequency, is added.
- Users need to set the FD3D root directory (the parent of src/, in/, out/, etc) as FD3D_ROOT environment variable.
- Users need to create startup.m file in MATLAB's start-up directory and add the following lines in the file:
	fd3d_root = getenv('FD3D_ROOT');
	addpath(strcat(fd3d_root, '/matlab/lib'));
- testinput script is added to in/ to test input files.
- gen_spectrum script is addet to generate input files for a range of wavelengths.
- scanwvlen script is added to job/ to generate job files for input files generated by gen_spectrum.
- dtofall script is added to in/ to change the double precision output files to single precision files.
- In Mac, users need to put "source ~/.bash_profile" right after shebang in /usr/bin/matlab script to use environment variables in MATLAB.
- An input file directive for taking snapshots of evolving iterative solutions is added.:


[May 10, 2010]
- A function to read the permittivity file (.eps) and permeability file (.mu) is added.  See matlab/lib/read_material.m.


[July 19, 2010]
- Better convergence is achieved by using the stretched-coordinate PML and continuity equation.


[June 28, 2011]
- The directory structure has changed.  There are no more centralized in/ and out/ directories.  You can create your project directory anywhere and create an input file there.  Execution of FD3D in the project directory creates output files in the same project directory.  You can test this in any example project directory such as $FD3D_ROOT/project_example/plane_wave.

- Most executables support --help option flag for the information on usage.  For example, you can execute:
fd3d --help
testinput --help
scanin --help

- Support a true PEC as a material type.  To use a true PEC, import it in your input file as:
from material import TruePEC

- Si is added in material/Palik/.

[August 4, 2011]
- src/testinput now generates a material code (.mc) file.  The file can be read by matlab/read_mcode() function to draw the shape of the structure.
