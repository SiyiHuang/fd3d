from math import floor, ceil 
from mio import loadmat
from const import *  # constants such as Xx, Yy, Zz, PEC, PMC, Periodic
from simulation import Simulation
from grid import Grid
from shape import Box
from material import create_material
from object import Object
from source import PlaneDistributedSrc

grid = Grid()
grid.set_length_unit(1e-9)
grid.set_wvlen($scanvar$)

# Set up dx_prob, dy_prob, dz_prob
dl = 2.0
dL = 20.0

Nx_fine = 48
Ny_fine = 48
Nz_fine = 48
Nx_coarse_neg = 70
Nx_coarse_pos = 30
Ny_coarse = 50
Nz_coarse_neg = Nx_coarse_neg
Nz_coarse_pos = Nx_coarse_pos
N_transition = 12
r = (dL/dl)**(1.0/(N_transition+1))  # scaling factor of increasing grid edge length

dx_prob = [dl]*Nx_fine
dx = dl
for i in xrange(N_transition):
	dx *= r
	dx_prob = [dx] + dx_prob + [dx]
dx_prob = [dL]*Nx_coarse_neg + dx_prob + [dL]*Nx_coarse_pos

dy_prob = [dl]*Ny_fine
dy = dl
for j in xrange(N_transition):
	dy *= r
	dy_prob += [dy]
dy_prob += [dL]*Ny_coarse

dz_prob = [dl]*Nz_fine
dz = dl
for i in xrange(N_transition):
	dz *= r
	dz_prob = [dz] + dz_prob + [dz]
dz_prob = [dL]*Nz_coarse_neg + dz_prob + [dL]*Nz_coarse_pos

grid.set_d_prob(Xx, dx_prob)
grid.set_d_prob(Yy, dy_prob)
grid.set_d_prob(Zz, dz_prob)

grid.set_Npml( (10, (0,10), 10) )
grid.set_BC( (PEC, (PMC,PEC), PEC) )
grid.initialize()

'''Create a Simulation object named <sim>.  CAUTION: the object must be named <sim> and should not be named differently, because this is assumed in fd3d.c.'''
sim = Simulation(grid)
sim.set_BiCG_tol(1e-6)
sim.set_BiCG_max_iter(-1)

# Set up objects.
Ag = sim.get_material('Ag', 2)
silica = sim.get_material('SiO2', 1)

Nx_slot_half = 12
Ny_slot_half = 12
Nz_slot_half = 12

#Nx_wallout_from_center = Nx_fine/2
#Nz_wallout_from_center = Nz_fine/2

Nx = grid.get_N(Xx)
Ny = grid.get_N(Yy)
Nz = grid.get_N(Zz)

# slot center
Nx_sc = grid.get_Npml(Xx,Neg) + Nx_coarse_neg + N_transition + 2*Nx_slot_half 
Nz_sc = grid.get_Npml(Zz,Neg) + Nz_coarse_neg + N_transition + 2*Nz_slot_half

bg = Box(grid)  # background
bg_silica = Object(bg, silica)
sim.append_object(bg_silica)

film_out = Box(grid, Nx, Ny_slot_half, Nz)
film_mid = Box(grid, Nx_sc + Nx_slot_half - 1, Ny_slot_half, Nz_sc + Nz_slot_half - 1)
film_in = Box(grid, Nx_sc - Nx_slot_half, Ny_slot_half, Nz_sc - Nz_slot_half)

film = film_out - film_mid + film_in
film_Ag = Object(film, Ag)
sim.append_object(film_Ag)

## Set up sources.
src_data = loadmat('bend50nm$scanvar$in.mat')
hx = src_data['hx']
hy = src_data['hy']

src_kx = PlaneDistributedSrc(grid, Xx, Zz, hy)
src_ky = PlaneDistributedSrc(grid, Yy, Zz, -hx)

Nz_src = 5
Npml_xn = grid.get_Npml(Xx, Neg)
Npml_zn = grid.get_Npml(Zz, Neg)

src_kx = src_kx.translate(Npml_xn, 0, Npml_zn+Nz_src)
src_ky = src_ky.translate(Npml_xn, 0, Npml_zn+Nz_src)

sim.append_source(src_kx)
sim.append_source(src_ky)
